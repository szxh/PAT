#include <cstdio>
#include <vector>
#include <queue>
using namespace std;
const int maxn = 101;
int level[maxn] = { 0 };
struct Node {
	int layer;
	vector<int> child;
}node[maxn];
int ct = 0;
void BFS(int root) {
	queue<int> q;
	q.push(root);
	node[root].layer = 1;
	level[1] = 1;
	while (!q.empty()) {
		int top = q.front();
		q.pop();
		for (int i = 0;i < node[top].child.size();i++) {
			int child = node[top].child[i];
			node[child].layer = node[top].layer + 1;
			level[node[child].layer]++;
			q.push(child);
		}
	}
}

int main() {
	int n, m;
	scanf("%d %d", &n, &m);
	int num, count, son;
	for (int i = 0;i < m;i++) {
		scanf("%d %d", &num, &count);
		for (int j = 0;j < count;j++) {
			scanf("%d", &son);
			node[num].child.push_back(son);
		}
	}
	BFS(1);
	int ans1 = 0, ans2;
	for (int i = 1;i <= n;i++) {
		if (level[i] > ans1) {
			ans1 = level[i];
			ans2 = i;
		}
	}
	printf("%d %d", ans1, ans2);
	return 0;
}
