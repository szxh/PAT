#include <cstdio>
#include <vector>
#include <queue>
using namespace std;
const int maxn = 100010;
vector<int> tree[maxn];
int maxDepth = 0;
int ct = 0;

void DFS(int root, int depth) {
	if (tree[root].size() == 0) {
		if (depth > maxDepth) {
			maxDepth = depth;
			ct = 1;
		}
		else if (depth == maxDepth) {
			ct++;
		}
		return;
	}
	for (int i = 0;i < tree[root].size();i++) {
		DFS(tree[root][i], depth + 1);
	}
}

int main() {
	int n;
	double p, r;
	scanf("%d %lf %lf", &n, &p, &r);
	int root;
	for (int i = 0;i < n;i++) {
		int num;
		scanf("%d", &num);
		if (num == -1) root = i;
		else tree[num].push_back(i);
	}
	DFS(root, 0);
	r /= 100;
	for (int i = 0;i < maxDepth;i++) {
		p = p + p * r ;
	}
	printf("%.2f %d", p, ct);
	return 0;
}
