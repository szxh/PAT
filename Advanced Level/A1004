#include <cstdio>
#include <queue>
#include <vector>
#include <algorithm>
using namespace std;
vector<int> node[105];
int h[105] = { 0 };
int leaf[105] = { 0 };
int max_h = 0;
void BFS(int root) {
	queue<int> q;
	q.push(root);
	h[root] = 1;
	while (!q.empty()) {
		int top = q.front();
		q.pop();
		max_h = max(max_h, h[top]);
		if (node[top].size() == 0) {
			leaf[h[top]]++;
		}
		for (int i = 0;i < node[top].size();i++) {
			h[node[top][i]] = h[top] + 1;
			q.push(node[top][i]);
		}
	}
}

int main() {
	int n, m;
	scanf("%d %d", &n, &m);
	int num, k, son;
	for (int i = 0;i < m;i++) {
		scanf("%d %d", &num, &k);
		for (int j = 0;j < k;j++) {
			scanf("%d", &son);
			node[num].push_back(son);
		}
	}
	BFS(1);
	for (int i = 1;i <= max_h;i++) {
		if (i == 1) printf("%d", leaf[i]);
		else printf(" %d", leaf[i]);
	}
	return 0;
}
