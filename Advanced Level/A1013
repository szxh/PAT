#include <cstdio>
#include <algorithm>
#include <vector>
using namespace std;
const int maxn = 1010;
vector<int> G[maxn];
bool vis[maxn];
int del;
void dfs(int v) {
	if (v == del) return;
	vis[v] = true;
	for (int i = 0;i < G[v].size();i++) {
		if (vis[G[v][i]] == false) {
			dfs(G[v][i]);
		}
	}
}

int main() {
	int n, m, k, a, b;
	scanf("%d %d %d", &n, &m, &k);
	for (int i = 0;i < m;i++) {
		scanf("%d %d", &a, &b);
		G[a].push_back(b);
		G[b].push_back(a);
	}
	for (int j = 0;j < k;j++) {
		scanf("%d", &del);
		fill(vis, vis + maxn, false);
		int block = 0;
		for (int i = 1;i <= n;i++) {
			if (i!=del && vis[i] == false) {
				dfs(i);
				block++;
			}
		}
		printf("%d\n", block - 1);
	}
	return 0;
}
