#include <cstdio>
#include <queue>
#include <vector>
using namespace std;

int post[32], in[32];
struct node{
	int data;
	node* left;
	node* right;
};

void layerOrder(node* root) {
	queue<node*> q;
	q.push(root);
	bool flag = false;
	while (!q.empty()) {
		if (flag == false) {
			flag = true;
			node* now = q.front();
			q.pop();
			printf("%d", now->data);
			if (now->left != NULL) q.push(now->left);
			if (now->right != NULL) q.push(now->right);
		}
		else {
			node* now = q.front();
			q.pop();
			printf(" %d", now->data);
			if (now->left != NULL) q.push(now->left);
			if (now->right != NULL) q.push(now->right);
		}
	}
}

node* create(int postl, int postr, int inl, int inr) {
	if (postl > postr) {
		return NULL;
	}
	node* root = new node;
	root->data = post[postr];
	int k;
	for (k = inl;k <= inr;k++) {
		if (in[k] == post[postr]) {
			break;
		}
	}
	int numleft = k - inl;
	root->left = create(postl, postl + numleft - 1, inl, k - 1);
	root->right = create(postl + numleft, postr - 1, k + 1, inr);
	return root;
}

int main() {
	int n;
	scanf("%d", &n);
	for (int i = 0;i < n;i++) {
		scanf("%d", &post[i]);
	}
	for (int i = 0;i < n;i++) {
		scanf("%d", &in[i]);
	}
	node* root = create(0,n-1,0,n-1);
	layerOrder(root);
	return 0;
}
