#include <cstdio>
#include <algorithm>
#include <vector>
#include <queue>
using namespace std;
const int maxn = 105;
struct Node {
	int data;
	int left, right;
}node[maxn];

int ans[105];
int index = 0;
int number[105];
int n;
int num = 0;
void inOrder(int root) {
	if (root == -1) return;
	inOrder(node[root].left);
	node[root].data = number[index++];
	inOrder(node[root].right);
}

void BFS(int root) {
	queue<int> q;
	q.push(root);
	while (!q.empty()) {
		int top = q.front();
		q.pop();
		printf("%d", node[top].data);
		num++;
		if (num < n) printf(" ");
		if (node[top].left != -1) q.push(node[top].left);
		if (node[top].right != -1) q.push(node[top].right);
	}
}

int main() {
	scanf("%d", &n);
	for (int i = 0;i < n;i++) {
		scanf("%d %d", &node[i].left, &node[i].right);
	}
	for (int i = 0;i < n;i++) {
		scanf("%d", &number[i]);
	}
	sort(number, number + n);
	inOrder(0);
	BFS(0);
	return 0;
}
