#include <cstdio>
#include <cmath>
#include <vector>
using namespace std;
const int maxn = 100010;
vector<int> tree[maxn];
double x = 99999999.9;
int ct = 0;
double p, r;
void DFS(int root, int depth) {
	if (tree[root].size() == 0) {
		double price = p * pow(1 + r, depth);
		if (price < x) {
			x = price;
			ct = 1;
		}
		else if (price == x) {
			ct++;
		}
		return;
	}
	for (int i = 0;i < tree[root].size();i++) {
		DFS(tree[root][i], depth + 1);
	}
}

int main() {
	int n;
	scanf("%d %lf %lf", &n, &p, &r);
	r /= 100;
	int k, num;
	for (int i = 0;i < n;i++) {
		scanf("%d", &k);
		for (int j = 0;j < k;j++) {
			scanf("%d", &num);
			tree[i].push_back(num);
		}
	}
	DFS(0, 0);
	printf("%.4f %d", x, ct);
	return 0;
}
